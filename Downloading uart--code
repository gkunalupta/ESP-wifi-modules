
#define F_CPU 16000000
#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>
#include <stdio.h>
#include <string.h>
void UART_Init0();
char UART_RxChar0();
void UART_TxChar0(uint16_t data);//unsigned short(0-65535)
void printString0( char *myString);
char rxstring0();
void uart_num0(uint16_t num);
void bit0(uint16_t val);//unsigned short (0-65535)
void decimel0(uint16_t val);
void UART_Init1();
int UART_RxChar1();
char UART_at1(char *str);
void UART_TxChar1(uint8_t data);
void printString1( char *myString);
void printint1(uint16_t myint[]);
char rxstring1();
void uart_num1(uint16_t num);
void bit1(uint16_t val);//unsigned short (0-65535)
void decimel1(uint16_t val);
void UART_Init3();
char UART_RxChar3();
char UART_at3(char *str);
void UART_TxChar3(char data);
void printString3( char *myString);
void printint3(int myint[]);
char rxstring3();
void uart_num3(uint16_t num);
void bit3(uint16_t val);//unsigned short (0-65535)
void decimel3(uint16_t val);

void UART_Init0()
{
	UBRR0L = 103;
	UCSR0B = (1<<TXEN0)|(1<<RXEN0);
	UCSR0C = (1<<UCSZ00)|(1<<UCSZ01)|(1<<UPE0);
}

void UART_TxChar0(uint16_t data)
{
	while((UCSR0A & (1<<UDRE0))==0);
	UDR0 = data;
	
}


char UART_RxChar0()
{   //unsigned char status, resh, resl;
	//status = UCSR0A;
	//bit0(UCSR0A);
	//printString0("\n");
	while( !(UCSR0A & (1<<RXC0)));
	//if ( status & (1<<DOR0)|(1<<UPE0)|(1<<FE0)==1)
	//return -1;
	//bit0(UCSR0A);
	//printString0("\n");
	return UDR0;
}

//stores the incoming string to buff
char rxstring0(char *buff)
{  int i=0;
	char myValue;
    do 
 {
		myValue = UART_RxChar0();
		if(myValue!='>')
     {
		buff[i]=myValue;
		UART_TxChar0(myValue);
		i++;
     }    else
		{
			 buff[i]='\0';
		break;
		}
 }while( !(UCSR1A & (1<<RXC1)));

	return myValue;
}

void printString0(char *myString)      /////to print any string
{

	while (*myString)
	{
		UART_TxChar0(*myString++);
	}
}


void uart_num0(uint16_t num)
{
	unsigned char H=0,T=0,O=0;
	H=num/100;
	T=(num - (H*100))/10;
	O=(num - (H*100) - (T*10));
	
	UART_TxChar0(H+48);
	UART_TxChar0(T+48);
	UART_TxChar0(O+48);
	UART_TxChar0(num);
}

void bit0(uint16_t val)
{
	int8_t ptr;
	for(ptr=7;ptr>=0;ptr--)
	{
		if ((val & (1<<ptr))==0)
		{
			UART_TxChar0('0');
		}
		else
		{
			UART_TxChar0('1');
		}
	}
}
// Transmit an unsigned 16 bit value as up to five decimal characters
void decimel0(uint16_t val)
 {
	unsigned char buf[5];
	int8_t ptr;
	for(ptr=0;ptr<5;++ptr) {
		buf[ptr] = (val % 10) + '0';
		val /= 10;
	}
	for(ptr=4;ptr>0;--ptr) {
		if (buf[ptr] != '0') break;
	}
	for(;ptr>=0;--ptr) {
		UART_TxChar0(buf[ptr]);
	}
}

void UART_Init1()  // baudrate =115200
{  //9600-103
	//115200-8
	UBRR1L = 8;
	UCSR1B = (1<<TXEN0)|(1<<RXEN0);
	UCSR1C = (1<<UCSZ00)|(1<<UCSZ01)|(1<<UPE0);
}

void UART_TxChar1(uint8_t data)
{
	while((UCSR1A & (1<<UDRE1))==0);
	UDR1 = data;
	
}


int UART_RxChar1()
{   //unsigned char status, resh, resl;
	//status = UCSR1A;

// 	printString3(" UCSR1A value before receiving data   \n");
// 
// 
// 	bit3(UCSR1A);
// // 
// // 
	printString3(" \n");

	while( !(UCSR1A & (1<<RXC1)));

// 	printString3(" UCSR1A value after receiving data  \n");
// 	bit3(UCSR1A);
// 	printString3("\n");
	return UDR1;
}

char UART_at1(char *str)
{   char x=0;
	int i=0;
	char value;
	//bit3(UCSR1A);
	//printString1("\n");
	if((UCSR1A & (1<<RXC1)))
	{   
		value=UART_RxChar1();
		//str[i]=value;
		printString3("receivingdata \n");
		//bit3(UCSR1A);
		//printString3("\n");
		UART_TxChar3(value);
		x++;
		_delay_ms(1000);
	}
	return x;
}

//stores the incoming string in buff[]
char rxstring1(char *buff)
{  int i=0;
	char myValue;
	do
	{
		
		myValue = UART_RxChar1();
		if(myValue!='>')
		{   
			
			buff[i]=myValue;
			UART_TxChar3(myValue);
			i++;
		
		}    else
		{ 
			
			buff[i]='\0';
			break;
		}
	}while( !(UCSR1A & (1<<RXC1)));
    
	return myValue;
}
void printString1(  char *myString)      /////to print any string
{
	char i = 0;
	while (myString[i])
	{
		UART_TxChar1(myString[i]);
		i++;
	}
}
void printint1(uint16_t myint[])
{
	
		uint16_t i = 0;
		while (myint[i])
		{
			UART_TxChar1(myint[i]);
			i++;
		}
	
}

void uart_num1(unsigned char num)
{
	unsigned char H=0,T=0,O=0;
	H=num/100;
	T=(num - (H*100))/10;
	O=(num - (H*100) - (T*10));
	
	UART_TxChar1(H+48);
	UART_TxChar1(T+48);
	UART_TxChar1(O+48);
	UART_TxChar1(num);
}

void bit1(uint16_t val)
{
	int8_t ptr;
	for(ptr=7;ptr>=0;ptr--)
	{
		if ((val & (1<<ptr))==0)
		{
			UART_TxChar1('0');
		}
		else
		{
			UART_TxChar1('1');
		}
	}
}
void decimel1(uint16_t val) {
	unsigned char buf[5];
	int8_t ptr;
	for(ptr=0;ptr<5;++ptr) {
		buf[ptr] = (val % 10) + '0';
		val /= 10;
	}
	for(ptr=4;ptr>0;--ptr) {
		if (buf[ptr] != '0') break;
	}
	for(;ptr>=0;--ptr) {
		UART_TxChar1(buf[ptr]);
	}
}
void UART_Init3()
{
	UBRR3L = 103;
	UCSR3B = (1<<TXEN3)|(1<<RXEN3);
	UCSR3C = (1<<UCSZ30)|(1<<UCSZ31)|(1<<UPE3);
}

void UART_TxChar3(char  data)
{
	while((UCSR3A & (1<<UDRE3))==0);
	UDR3 = data;
	
}


char UART_RxChar3()
{   

	while( !(UCSR3A & (1<<RXC3)));

	return UDR3;
}



char UART_at3(char *str)
{   int x=0;
	int i=0;
	bit3(UCSR3A);
	printString3("\n");
	while( (UCSR3A & (1<<RXC3)))
	{   str[i]=UDR3;
		bit3(UCSR3A);
		printString3("\n");
		x++;
	}
	return x;
}





//stores the incoming string in buff[]
char rxstring3(char *buff)
{  int i=0;
	char myValue;
	do
	{
		myValue = UART_RxChar1();
		if(myValue!='>')
		{
			buff[i]=myValue;
			UART_TxChar3(myValue);
			i++;
		}    else
		{
			buff[i]='\0';
			break;
		}
	}while( !(UCSR1A & (1<<RXC1)));

	return myValue;
}

void printint3(int myint[])
{
	
	uint16_t i = 0;
	while (myint[i])
	{
		UART_TxChar3(myint[i]);
		i++;
	}
	
}


void printString3(char *myString)      /////to print any string
{

	while (*myString)
	{
		UART_TxChar3(*myString++);
	}
}


void uart_num3(uint16_t num)
{
	unsigned char H=0,T=0,O=0;
	H=num/100;
	T=(num - (H*100))/10;
	O=(num - (H*100) - (T*10));
	
	UART_TxChar3(H+48);
	UART_TxChar3(T+48);
	UART_TxChar3(O+48);
	UART_TxChar3(num);
}

void bit3(uint16_t val)
{
	int8_t ptr;
	for(ptr=7;ptr>=0;ptr--)
	{
		if ((val & (1<<ptr))==0)
		{
			UART_TxChar3('0');
		}
		else
		{
			UART_TxChar3('1');
		}
	}
}
// Transmit an unsigned 16 bit value as up to five decimal characters
void decimel3(uint16_t val)
{
	unsigned char buf[5];
	int8_t ptr;
	for(ptr=0;ptr<5;++ptr) {
		buf[ptr] = (val % 10) + '0';
		val /= 10;
	}
	for(ptr=4;ptr>0;--ptr) {
		if (buf[ptr] != '0') break;
	}
	for(;ptr>=0;--ptr) {
		UART_TxChar3(buf[ptr]);
	}
}
