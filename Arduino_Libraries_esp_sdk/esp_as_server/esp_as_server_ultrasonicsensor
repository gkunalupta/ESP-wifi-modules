//theiotprojects.com
#include <Ultrasonic.h>
#include <ESP8266WiFi.h>
#include <ESPAsyncTCP.h>
#include <ESPAsyncWebServer.h>
#include <FS.h>
#include <Wire.h>
#include "DHT.h"        // including the library of DHT11 temperature and humidity sensor
#define DHTTYPE DHT11   // DHT 11

#define dht_dpin D5
DHT dht(dht_dpin, DHTTYPE); 
// Instantiate trig and echo pins for ultrasonic sensors
Ultrasonic ultrasonic (D0, D1);
// Replace with your network credentials
const char* ssid = "JioFiber 2.4ghz";
const char* password = "Mansi5481";
// Create AsyncWebServer object on port 80
AsyncWebServer server(80);

String gettemperature() {
  // Read Distance
  float t = dht.readTemperature();
  Serial.println("Temperature");
  Serial.println(t);
  delay(100);
  if (isnan(t)) {
    Serial.println("Failed to read from dht11 sensor!");
    return "";
  }
  else {
    Serial.println(t);
    return String(t);
  }
}

String getDistance() {
  // Read Distance
  float d = ultrasonic.read();
  if (isnan(d)) {
    Serial.println("Failed to read from HC-SR04 sensor!");
    return "";
  }
  else {
    Serial.println(d);
    return String(d);
  }
}
void setup ()
{
    
       Serial.begin (115200);
       //dht.begin();
      if (! SPIFFS.begin ()) 
       {
            Serial.println ("An Error has occurred while mounting SPIFFS");
            return;
        }
        // Connect to Wi-Fi
        WiFi.begin(ssid, password);
        while (WiFi.status() != WL_CONNECTED)
      {
            delay(1000);
            Serial.println("Connecting to WiFi..");
       }
       Serial.println(WiFi.localIP());
       dht.begin();
         
        // Route for web page
       server.on ("/", HTTP_GET, [] (AsyncWebServerRequest * request) 
       {
         request-> send (SPIFFS, "/index.html");
        });
        delay(100);
 server.on ("/distance", HTTP_GET, [] (AsyncWebServerRequest * request) {
  request-> send_P (200, "text / plain", gettemperature().c_str());
   request-> send_P (200, "text / plain", getDistance().c_str());
  });

  // start server
  server.begin ();
     humidity = dht.readHumidity();
  temperature = dht.readTemperature();

  Serial.println(humidity);
  Serial.println(temperature);
}
void loop() {
}
